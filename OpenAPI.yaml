openapi: 3.0.0
info:
  title: Alarm Level Management API
  description: This document describes the APIs required for managing alarm levels, including token generation, retrieving alarm levels, and adding new alarm levels. All APIs require token validation and have a QPS limit of one request per minute.
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /api/token:
    post:
      summary: Generates a token
      description: Generates a token that is valid for 6 hours.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires_in:
                    type: integer
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/alarm-levels:
    get:
      summary: Retrieves all alarm levels
      description: Retrieves all alarm levels in JSON format. Requires token validation.
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer your_token
      responses:
        '200':
          description: Successful response with alarm levels
          content:
            application/json:
              schema:
                type: object
                properties:
                  alarm_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        level:
                          type: string
                        description:
                          type: string
        '401':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Adds a new alarm level
      description: Adds a new alarm level. Requires token validation.
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer your_token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                level:
                  type: string
                description:
                  type: string
              required:
                - level
                - description
      responses:
        '201':
          description: Alarm level created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  level:
                    type: string
                  description:
                    type: string
        '401':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/alarm-levels/{id}:
    get:
      summary: Retrieves a specific alarm level
      description: Retrieves the details of a specific alarm level by ID. Requires token validation.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer your_token
      responses:
        '200':
          description: Successful response with alarm level details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  level:
                    type: string
                  description:
                    type: string
        '401':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/users/register:
    post:
      summary: Registers a new user
      description: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/users/login:
    post:
      summary: Logs in a user
      description: Logs in a user and generates a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires_in:
                    type: integer
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /api/token/validate:
    get:
      summary: Validates the token
      description: Validates the token.
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer your_token
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
        '401':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  error:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
